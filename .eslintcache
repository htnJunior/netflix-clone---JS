[{"C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\index.js":"1","C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\App.js":"2","C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\tmdb.js":"3","C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\components\\MovieRow.js":"4","C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\components\\FeaturedMovie.js":"5","C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\components\\Header.js":"6"},{"size":197,"mtime":1611155287052,"results":"7","hashOfConfig":"8"},{"size":1975,"mtime":1611621852605,"results":"9","hashOfConfig":"8"},{"size":2594,"mtime":1611622054984,"results":"10","hashOfConfig":"8"},{"size":1779,"mtime":1611621943576,"results":"11","hashOfConfig":"8"},{"size":1592,"mtime":1611623210424,"results":"12","hashOfConfig":"8"},{"size":598,"mtime":1611606276312,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1bn1h7g",{"filePath":"17","messages":"18","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\index.js",[],["28","29"],"C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\App.js",["30","31"],"import React, { useEffect, useState } from 'react'\nimport './app.css'\nimport Tmdb from './tmdb'\nimport MovieRow from './components/MovieRow'\nimport FeaturedMovie from './components/FeaturedMovie'\nimport Header from './components/Header'\n\n\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([])\n  const [FeaturedData, setFeaturedData] = useState([])\n  const [blackheader, setBlackHeader] = useState(false)\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList()\n      setMovieList(list)\n    \n      let originals = list.filter(i=>i.slug === 'originals')\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n      let chosen = originals[0].items.results[randomChosen]\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeaturedData(chosenInfo)\n    }\n\n    loadAll()\n  }, [])\n\n  useEffect(() => {\n    const scrollListener = () => {\n      if(window.scrollY > 10){\n        setBlackHeader(true)\n      }else{\n        setBlackHeader(false)\n      }\n    }\n\n    window.addEventListener('scroll', scrollListener)\n    return () => {\n      window.removeEventListener('scroll', scrollListener)\n    }\n  }, [])\n\n  return (\n    <div className=\"page\">\n\n      <Header black={blackheader}/>\n\n      {FeaturedData && \n        <FeaturedMovie item={FeaturedData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n      \n      <footer>\n        Feito para fins de estudos por Helington Oliveira<br/>\n        Todos os direitos de imagem para Netflix<br/>\n        Dados retirados do site Themoviedb.org\n        \n      </footer>\n\n      {movieList.length <= 0 &&\n        <div className=\"loading\">\n            <img src=\"https://www.filmelier.com/pt/br/news/wp-content/uploads/2020/03/netflix-loading.gif\"></img>\n        </div>\n      }\n    </div>\n  )\n}","C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\tmdb.js",["32"],"C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\components\\MovieRow.js",["33"],"C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\components\\FeaturedMovie.js",["34","35","36"],"C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\components\\Header.js",["37","38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":10,"column":1,"nodeType":"46","endLine":75,"endColumn":2},{"ruleId":"47","severity":1,"message":"48","line":70,"column":13,"nodeType":"49","endLine":70,"endColumn":108},{"ruleId":"44","severity":1,"message":"50","line":10,"column":1,"nodeType":"46","endLine":77,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":6,"column":1,"nodeType":"46","endLine":55,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","endLine":36,"endColumn":2},{"ruleId":"51","severity":1,"message":"52","line":28,"column":25,"nodeType":"49","endLine":28,"endColumn":70},{"ruleId":"51","severity":1,"message":"52","line":29,"column":25,"nodeType":"49","endLine":29,"endColumn":71},{"ruleId":"44","severity":1,"message":"45","line":6,"column":1,"nodeType":"46","endLine":21,"endColumn":2},{"ruleId":"47","severity":1,"message":"48","line":11,"column":21,"nodeType":"49","endLine":11,"endColumn":46},{"ruleId":"47","severity":1,"message":"48","line":16,"column":21,"nodeType":"49","endLine":16,"endColumn":41},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","Assign object to a variable before exporting as module default","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]