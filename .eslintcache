[{"C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\index.js":"1","C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\App.js":"2","C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\tmdb.js":"3","C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\components\\MovieRow.js":"4","C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\components\\FeaturedMovie.js":"5"},{"size":197,"mtime":1611155287052,"results":"6","hashOfConfig":"7"},{"size":1105,"mtime":1611582051755,"results":"8","hashOfConfig":"7"},{"size":2594,"mtime":1611187393053,"results":"9","hashOfConfig":"7"},{"size":672,"mtime":1611172823184,"results":"10","hashOfConfig":"7"},{"size":1592,"mtime":1611585673394,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1bn1h7g",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\index.js",[],"C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\App.js",["23"],"import React, { useEffect, useState } from 'react'\nimport './app.css'\nimport Tmdb from './tmdb'\nimport MovieRow from './components/MovieRow'\nimport FeaturedMovie from './components/FeaturedMovie'\n\n\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([])\n  const [FeaturedData, setFeaturedData] = useState([])\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList()\n      setMovieList(list)\n    \n      let originals = list.filter(i=>i.slug === 'originals')\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1))\n      let chosen = originals[0].items.results[randomChosen]\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n      setFeaturedData(chosenInfo)\n    }\n\n    loadAll()\n  }, [])\n\n  return (\n    <div className=\"page\">\n\n      {FeaturedData && \n        <FeaturedMovie item={FeaturedData} />\n      }\n\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items} />\n        ))}\n      </section>\n    </div>\n  )\n}","C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\tmdb.js",["24"],"C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\components\\MovieRow.js",["25"],"C:\\Users\\POLL69\\Desktop\\nodejs\\netflixclone\\src\\components\\FeaturedMovie.js",["26","27","28"],{"ruleId":"29","severity":1,"message":"30","line":9,"column":1,"nodeType":"31","endLine":43,"endColumn":2},{"ruleId":"29","severity":1,"message":"32","line":10,"column":1,"nodeType":"31","endLine":77,"endColumn":2},{"ruleId":"29","severity":1,"message":"30","line":4,"column":1,"nodeType":"31","endLine":19,"endColumn":2},{"ruleId":"29","severity":1,"message":"30","line":4,"column":1,"nodeType":"31","endLine":36,"endColumn":2},{"ruleId":"33","severity":1,"message":"34","line":28,"column":25,"nodeType":"35","endLine":28,"endColumn":70},{"ruleId":"33","severity":1,"message":"34","line":29,"column":25,"nodeType":"35","endLine":29,"endColumn":71},"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement"]